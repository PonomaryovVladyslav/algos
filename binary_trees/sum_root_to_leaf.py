from collections import deque

# –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–Ω—è –≤ –ª–∏—Å—Ç.
# –î–∞–Ω–æ: –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ `root`, –≥–¥–µ –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –¥–æ –ª–∏—Å—Ç–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ.
# –ù—É–∂–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å —Å—É–º–º—É –≤—Å–µ—Ö —Ç–∞–∫–∏—Ö —á–∏—Å–µ–ª.

class TreeNode:
    """
    –ö–ª–∞—Å—Å —É–∑–ª–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
    """
    def __init__(self, val: int = 0, left: "TreeNode" = None, right: "TreeNode" = None):
        self.val = val
        self.left = left
        self.right = right


def sum_numbers(root: TreeNode) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–Ω—è –≤ –ª–∏—Å—Ç (DFS, —Ä–µ–∫—É—Ä—Å–∏—è).

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –º—ã –ø–æ—Å–µ—â–∞–µ–º –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(H), –≥–¥–µ `H` ‚Äî –≤—ã—Å–æ—Ç–∞ –¥–µ—Ä–µ–≤–∞ (–≥–ª—É–±–∏–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏–∏).

    :param root: TreeNode - –∫–æ—Ä–µ–Ω—å –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
    :return: int - —Å—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–Ω—è –≤ –ª–∏—Å—Ç.
    """

    def dfs(node: TreeNode | None, current_sum: int) -> int:
        if not node:
            return 0

        current_sum = current_sum * 10 + node.val

        if not node.left and not node.right:  # –õ–∏—Å—Ç
            return current_sum

        return dfs(node.left, current_sum) + dfs(node.right, current_sum)

    return dfs(root, 0)


def sum_numbers_bfs(root: TreeNode) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–Ω—è –≤ –ª–∏—Å—Ç (BFS, –æ—á–µ—Ä–µ–¥—å).

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –º—ã –ø–æ—Å–µ—â–∞–µ–º –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ `queue` —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ —É–∑–ª—ã —É—Ä–æ–≤–Ω—è.

    :param root: TreeNode - –∫–æ—Ä–µ–Ω—å –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
    :return: int - —Å—É–º–º–∞ –≤—Å–µ—Ö —á–∏—Å–µ–ª, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∏–∑ –∫–æ—Ä–Ω—è –≤ –ª–∏—Å—Ç.
    """

    if not root:
        return 0

    queue: deque[tuple[TreeNode, int]] = deque([(root, 0)])
    total_sum: int = 0

    while queue:
        node, current_sum = queue.popleft()
        current_sum = current_sum * 10 + node.val

        if not node.left and not node.right:  # –õ–∏—Å—Ç
            total_sum += current_sum

        if node.left:
            queue.append((node.left, current_sum))
        if node.right:
            queue.append((node.right, current_sum))

    return total_sum


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
# –¢–µ—Å—Ç 1: 1 -> 2 (12), 1 -> 3 (13) ‚Üí 12 + 13 = 25
tree = TreeNode(1, TreeNode(2), TreeNode(3))
print(sum_numbers(tree))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 25
print(sum_numbers_bfs(tree))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 25

# –¢–µ—Å—Ç 2: 4 -> 9 -> 5 (495), 4 -> 9 -> 1 (491), 4 -> 0 (40) ‚Üí 495 + 491 + 40 = 1026
tree2 = TreeNode(4, TreeNode(9, TreeNode(5), TreeNode(1)), TreeNode(0))
print(sum_numbers(tree2))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 1026
print(sum_numbers_bfs(tree2))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 1026


"""
üîπ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤:

1Ô∏è‚É£ `sum_numbers()` (DFS, —Ä–µ–∫—É—Ä—Å–∏—è)
   - –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n) ‚Äî –ø–æ—Å–µ—â–∞–µ–º –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑.
   - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(H) ‚Äî –≥–ª—É–±–∏–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏–∏ (H = log n –≤ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –¥–µ—Ä–µ–≤–µ, H = n –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ).

2Ô∏è‚É£ `sum_numbers_bfs()` (BFS, –æ—á–µ—Ä–µ–¥—å)
   - –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n) ‚Äî –ø–æ—Å–µ—â–∞–µ–º –∫–∞–∂–¥—ã–π —É–∑–µ–ª —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑.
   - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n) ‚Äî –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ `queue` —Ö—Ä–∞–Ω–∏—Ç –≤—Å–µ —É–∑–ª—ã —É—Ä–æ–≤–Ω—è.

‚úÖ –í—ã–≤–æ–¥:
   - **DFS –ø—Ä–æ—â–µ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç O(H) –ø–∞–º—è—Ç–∏** (–ª—É—á—à–µ –¥–ª—è –≥–ª—É–±–æ–∫–∏—Ö –¥–µ—Ä–µ–≤—å–µ–≤).
   - **BFS –∏—Å–ø–æ–ª—å–∑—É–µ—Ç O(n) –ø–∞–º—è—Ç–∏** (–ª—É—á—à–µ –¥–ª—è —à–∏—Ä–æ–∫–∏—Ö –¥–µ—Ä–µ–≤—å–µ–≤, –∏–∑–±–µ–≥–∞–µ—Ç –≥–ª—É–±–æ–∫–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏).
"""
