def my_sqrt(x: int) -> int:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å `‚åäsqrt(x)‚åã` —Å –ø–æ–º–æ—â—å—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º**:
       - –ò—Å–ø–æ–ª—å–∑—É–µ–º **–±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫** –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ `[1, x]`.
       - –°–µ—Ä–µ–¥–∏–Ω–∞ `mid = (left + right) // 2`.
       - –ü—Ä–æ–≤–µ—Ä—è–µ–º `mid * mid`:
         - –ï—Å–ª–∏ `mid^2 == x`, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `mid`.
         - –ï—Å–ª–∏ `mid^2 < x`, –¥–≤–∏–≥–∞–µ–º `left = mid + 1`.
         - –ò–Ω–∞—á–µ `right = mid - 1`.
       - –í–æ–∑–≤—Ä–∞—â–∞–µ–º `right` –∫–∞–∫ –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–µ `right^2 <= x`.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(log x)`, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º **–±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫**.

    """
    if x == 0:
        return 0

    left, right = 1, x  # –ü–æ–∏—Å–∫ –æ—Ç 1 –¥–æ x
    while left <= right:
        mid = (left + right) // 2
        if mid * mid == x:
            return mid
        elif mid * mid < x:
            left = mid + 1
        else:
            right = mid - 1

    return right  # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π mid


# üîπ –¢–µ—Å—Ç—ã
print(my_sqrt(8))  # ‚úÖ 2
print(my_sqrt(4))  # ‚úÖ 2
print(my_sqrt(0))  # ‚úÖ 0
print(my_sqrt(16))  # ‚úÖ 4
print(my_sqrt(27))  # ‚úÖ 5
print(my_sqrt(1000000))  # ‚úÖ 1000
print(my_sqrt(2147395599))  # ‚úÖ 46339 (–ø–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–π —Å–ª—É—á–∞–π)
