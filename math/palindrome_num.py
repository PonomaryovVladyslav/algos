def is_palindrome(x: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º (—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å–ø—Ä–∞–≤–∞ –∏ —Å–ª–µ–≤–∞).

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º**:
       - –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ **–Ω–µ** –º–æ–≥—É—Ç –±—ã—Ç—å –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞–º–∏.
       - –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —á–∏—Å–ª–æ, —Å–æ–∑–¥–∞–≤–∞—è `reversed_x`, –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç—É —Å—Ç—Ä–æ–∫–∏.
       - –ï—Å–ª–∏ –∏—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ `x` —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã–º, –æ–Ω–æ –ø–∞–ª–∏–Ω–¥—Ä–æ–º.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(log n)`, —Ç–∞–∫ –∫–∞–∫ —á–∏—Å–ª–æ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ `10` –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.
    """
    if x < 0:
        return False  # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–∞–ª–∏–Ω–¥—Ä–æ–º–∞–º–∏

    original = x
    reversed_x = 0

    while x > 0:
        reversed_x = reversed_x * 10 + x % 10  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É
        x //= 10  # –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É

    return original == reversed_x


# üîπ –¢–µ—Å—Ç—ã
print(is_palindrome(121))  # ‚úÖ True
print(is_palindrome(-121))  # ‚úÖ False
print(is_palindrome(10))  # ‚úÖ False
print(is_palindrome(1221))  # ‚úÖ True
print(is_palindrome(0))  # ‚úÖ True
print(is_palindrome(123321))  # ‚úÖ True
