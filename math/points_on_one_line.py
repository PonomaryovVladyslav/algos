from collections import defaultdict
from fractions import Fraction

def max_points(points: list[list[int]]) -> int:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫, –Ω–∞—Ö–æ–¥—è—â–∏—Ö—Å—è –Ω–∞ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º**:
       - –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –∫–∞–∂–¥—É—é —Ç–æ—á–∫—É `p1`, —Å—á–∏—Ç–∞—è –µ—ë –Ω–∞—á–∞–ª—å–Ω–æ–π.
       - –î–ª—è –∫–∞–∂–¥–æ–π –¥—Ä—É–≥–æ–π —Ç–æ—á–∫–∏ `p2` –≤—ã—á–∏—Å–ª—è–µ–º –Ω–∞–∫–ª–æ–Ω `dy/dx` (–∏—Å–ø–æ–ª—å–∑—É–µ–º `Fraction`, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è).
       - –•—Ä–∞–Ω–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –Ω–∞–∫–ª–æ–Ω–æ–º –≤ `defaultdict(int)`.
       - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞–∫–ª–æ–Ω–æ–≤.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n^2)`, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–∞—Ä—ã —Ç–æ—á–µ–∫.

    """
    if len(points) <= 2:
        return len(points)  # –ï—Å–ª–∏ 1 –∏–ª–∏ 2 —Ç–æ—á–∫–∏, –æ–Ω–∏ –≤—Å–µ –Ω–∞ –æ–¥–Ω–æ–π –ª–∏–Ω–∏–∏

    def find_slope(p1, p2):
        """ –í—ã—á–∏—Å–ª—è–µ–º –Ω–∞–∫–ª–æ–Ω –ª–∏–Ω–∏–∏ —á–µ—Ä–µ–∑ –¥–≤–µ —Ç–æ—á–∫–∏ (—Å —É—á–µ—Ç–æ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö –ª–∏–Ω–∏–π). """
        x1, y1 = p1
        x2, y2 = p2
        if x1 == x2:
            return float('inf')  # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è
        return Fraction(y2 - y1, x2 - x1)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Fraction –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏

    max_count = 1  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –Ω–∞ –ª–∏–Ω–∏–∏
    for i, p1 in enumerate(points):
        slopes = defaultdict(int)
        same_points = 1  # –°—á–∏—Ç–∞–µ–º —Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ —Ç–æ—á–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, [0,0], [0,0])
        local_max = 0
        for j in range(i + 1, len(points)):
            p2 = points[j]
            if p1 == p2:
                same_points += 1  # –£—á–∏—Ç—ã–≤–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
            else:
                slope = find_slope(p1, p2)
                slopes[slope] += 1
                local_max = max(local_max, slopes[slope])

        max_count = max(max_count, local_max + same_points)  # + same_points, –≤–∫–ª—é—á–∞—è –¥—É–±–ª–∏–∫–∞—Ç—ã

    return max_count


# üîπ –¢–µ—Å—Ç—ã
print(max_points([[1, 1], [2, 2], [3, 3]]))  # ‚úÖ 3
print(max_points([[1, 1], [3, 2], [5, 3], [4, 1], [2, 3], [1, 4]]))  # ‚úÖ 4
print(max_points([[0, 0], [1, 1], [2, 2], [3, 3], [3, 4], [4, 5], [6, 7]]))  # ‚úÖ 5
print(max_points([[0, 0], [0, 0], [0, 0]]))  # ‚úÖ 3
print(max_points([[0, 0]]))  # ‚úÖ 1
print(max_points([[0, 0], [0, 1], [1, 0], [1, 1], [2, 2], [3, 3]]))  # ‚úÖ 4
