def trailing_zeroes(n: int) -> int:
    """
    Подсчитывает количество конечных нулей в факториале `n!`.

    🔹 **Алгоритм**:
       - Количество нулей определяется количеством пар `2 * 5`.
       - Чисел, содержащих `2`, больше, чем `5`, поэтому важно считать только `5`.
       - Каждое число, кратное `5`, даёт 1 множитель `5`, `25` даёт 2 множителя, `125` — 3 и т. д.
       - Алгоритм делит `n` на `5, 25, 125, ...`, суммируя количество `5`.

    🔹 **Сложность**:
       - `O(log n)`, так как `n` делится на `5` на каждой итерации.
    """
    count = 0
    while n >= 5:
        n //= 5
        count += n
    return count


# 🔹 Тесты
print(trailing_zeroes(5))  # ✅ 1 (5! = 120)
print(trailing_zeroes(10))  # ✅ 2 (10! = 3 628 800)
print(trailing_zeroes(25))  # ✅ 6 (25! = 15 511 210 043 330 985 984 000 000)
print(trailing_zeroes(100))  # ✅ 24
print(trailing_zeroes(200))  # ✅ 49
print(trailing_zeroes(1000))  # ✅ 249
