from heapq import heappush, heappop


def k_smallest_pairs(nums1: list[int], nums2: list[int], k: int) -> list[list[int]]:
    """
    –ù–∞—Ö–æ–¥–∏—Ç `k` –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø–∞—Ä `(nums1[i], nums2[j])` –ø–æ –∏—Ö —Å—É–º–º–µ.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º (Min Heap)**:
       - –ò—Å–ø–æ–ª—å–∑—É–µ–º Min Heap (`heapq`) –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è `k` –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø–∞—Ä.
       - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫—É—á—É –ø–µ—Ä–≤—ã–º–∏ `min(k, len(nums1))` –ø–∞—Ä–∞–º–∏ `(nums1[i], nums2[0])`.
       - –ö–∞–∂–¥—ã–π —Ä–∞–∑ –∏–∑–≤–ª–µ–∫–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â—É—é –≤–æ–∑–º–æ–∂–Ω—É—é –ø–∞—Ä—É `(nums1[i], nums2[j+1])`.

    üîπ **–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(k log k)`, —Ç–∞–∫ –∫–∞–∫ –≤ –∫—É—á–µ `k` —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∏ –º—ã `k` —Ä–∞–∑ –¥–µ–ª–∞–µ–º `heappop` / `heappush` (`log k`).

    üîπ **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(k)`, —Ç–∞–∫ –∫–∞–∫ —Ö—Ä–∞–Ω–∏–º `k` —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫—É—á–µ.

    :param nums1: list[int] - –ü–µ—Ä–≤—ã–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤.
    :param nums2: list[int] - –í—Ç–æ—Ä–æ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤.
    :param k: int - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø–∞—Ä.
    :return: list[list[int]] - –°–ø–∏—Å–æ–∫ –∏–∑ `k` –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –ø–∞—Ä.
    """
    if not nums1 or not nums2 or k == 0:
        return []

    min_heap = []
    result = []

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º heap –ø–µ—Ä–≤—ã–º–∏ `min(k, len(nums1))` –ø–∞—Ä–∞–º–∏ (nums1[i], nums2[0])
    for i in range(min(k, len(nums1))):
        heappush(min_heap, (nums1[i] + nums2[0], i, 0))  # (—Å—É–º–º–∞, –∏–Ω–¥–µ–∫—Å –≤ nums1, –∏–Ω–¥–µ–∫—Å –≤ nums2)

    while min_heap and len(result) < k:
        _, i, j = heappop(min_heap)
        result.append([nums1[i], nums2[j]])

        if j + 1 < len(nums2):  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø–∞—Ä—É `(nums1[i], nums2[j+1])`
            heappush(min_heap, (nums1[i] + nums2[j + 1], i, j + 1))

    return result


# üîπ –¢–µ—Å—Ç—ã
print(k_smallest_pairs([1, 7, 11], [2, 4, 6], 3))  # ‚úÖ [[1,2], [1,4], [1,6]]
print(k_smallest_pairs([1, 1, 2], [1, 2, 3], 2))  # ‚úÖ [[1,1], [1,1]]
print(k_smallest_pairs([1, 2], [3], 3))  # ‚úÖ [[1,3], [2,3]]
print(k_smallest_pairs([1, 2, 3], [4, 5, 6], 5))  # ‚úÖ [[1,4], [1,5], [1,6], [2,4], [2,5]]
