def eval_rpn(tokens: list[str]) -> int:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–π –ø–æ–ª—å—Å–∫–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ (RPN).

    üîπ **–ê—Ä–≥—É–º–µ–Ω—Ç—ã**:
        - `tokens`: —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –æ–ø–µ—Ä–∞–Ω–¥—ã –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã.

    üîπ **–ú–µ—Ç–æ–¥**:
        - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–µ–∫ (`stack`), –∫—É–¥–∞ –∫–ª–∞–¥—ë—Ç —á–∏—Å–ª–∞.
        - –ü—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ `+`, `-`, `*`, `/` –±–µ—Ä—ë—Ç –¥–≤–∞ —á–∏—Å–ª–∞ –∏–∑ —Å—Ç–µ–∫–∞.
        - –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –∫–ª–∞–¥—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç–µ–∫.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
        - `O(n)`, –≥–¥–µ `n` ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤.

    ‚úÖ **–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã**:
       ```
       eval_rpn(["2", "1", "+", "3", "*"])  # 9
       eval_rpn(["4", "13", "5", "/", "+"])  # 6
       ```
    """
    stack = []

    for token in tokens:
        if token in {"+", "-", "*", "/"}:  # –ï—Å–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä
            b, a = stack.pop(), stack.pop()  # –ë–µ—Ä—ë–º –¥–≤–∞ –≤–µ—Ä—Ö–Ω–∏—Ö —á–∏—Å–ª–∞
            if token == "+":
                res = a + b
            elif token == "-":
                res = a - b
            elif token == "*":
                res = a * b
            else:
                res = int(a / b)  # –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –∫ 0
            stack.append(res)  # –ö–ª–∞–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞—Ç–Ω–æ
        else:
            stack.append(int(token))  # –û–ø–µ—Ä–∞–Ω–¥ ‚Üí –≤ —Å—Ç–µ–∫

    return stack[0]  # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç


# üîπ –¢–µ—Å—Ç—ã
print(eval_rpn(["2", "1", "+", "3", "*"]))  # ‚úÖ 9   ‚Üí (2 + 1) * 3
print(eval_rpn(["4", "13", "5", "/", "+"]))  # ‚úÖ 6   ‚Üí 4 + (13 / 5)
print(eval_rpn(["10", "6", "9", "3", "/", "-", "*"]))  # ‚úÖ 30 ‚Üí 10 * (6 - (9 / 3))
print(eval_rpn(["3", "-4", "+"]))  # ‚úÖ -1 ‚Üí 3 + (-4)
print(eval_rpn(["5", "1", "2", "+", "4", "*", "+", "3", "-"]))  # ‚úÖ 14
