class MinStack:
    """
    –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–µ–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ–ª—É—á–µ–Ω–∏—è –º–∏–Ω–∏–º—É–º–∞ –∑–∞ O(1).

    üîπ **–ú–µ—Ç–æ–¥—ã**:
        - `push(val)`: –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫.
        - `pop()`: –£–¥–∞–ª—è–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç.
        - `top()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç.
        - `get_min()`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç.

    üîπ **–°—Ç—Ä—É–∫—Ç—É—Ä—ã**:
        - `stack`: –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–µ–∫ (—Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã).
        - `min_stack`: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç–µ–∫ (—Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –º–∏–Ω–∏–º—É–º—ã).

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
        - `O(1)` ‚Äî –≤—Å—Ç–∞–≤–∫–∞ (`push`), —É–¥–∞–ª–µ–Ω–∏–µ (`pop`), –ø–æ–∏—Å–∫ (`top`), –º–∏–Ω–∏–º—É–º (`get_min`).
        - `O(n)` ‚Äî –ø–∞–º—è—Ç—å (–∏–∑-–∑–∞ `min_stack`).

    ‚úÖ **–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã**:
       ```
       minstack = MinStack()
       minstack.push(1)
       minstack.push(3)
       minstack.push(2)
       minstack.pop()
       print(minstack.get_min())  # –í—ã–≤–µ–¥–µ—Ç 1
       ```
    """

    def __init__(self):
        self.stack = []
        self.min_stack = []

    def push(self, val: int) -> None:
        """ –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç min_stack. """
        self.stack.append(val)
        # –ï—Å–ª–∏ min_stack –ø—É—Å—Ç –∏–ª–∏ val <= —Ç–µ–∫—É—â–µ–≥–æ –º–∏–Ω–∏–º—É–º–∞
        if not self.min_stack or val <= self.min_stack[-1]:
            self.min_stack.append(val)

    def pop(self) -> None:
        """ –£–¥–∞–ª—è–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å—Ç–µ–∫–∞ –∏ min_stack (–µ—Å–ª–∏ –æ–Ω –±—ã–ª –º–∏–Ω–∏–º—É–º–æ–º). """
        if self.stack:
            if self.stack[-1] == self.min_stack[-1]:  # –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º –º–∏–Ω–∏–º—É–º
                self.min_stack.pop()
            self.stack.pop()

    def top(self) -> int:
        """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Ä—Ö–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–µ–∫–∞ (–∏–ª–∏ None, –µ—Å–ª–∏ —Å—Ç–µ–∫ –ø—É—Å—Ç). """
        return self.stack[-1] if self.stack else None

    def get_min(self) -> int:
        """ –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å—Ç–µ–∫–µ. """
        return self.min_stack[-1] if self.min_stack else None


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º MinStack
minstack = MinStack()
minstack.push(1)
minstack.push(3)
minstack.push(2)
minstack.pop()
print(minstack.get_min())  # ‚úÖ 1
