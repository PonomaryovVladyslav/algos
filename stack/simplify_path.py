def simplify_path(path: str) -> str:
    """
    –£–ø—Ä–æ—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å, —É–±–∏—Ä–∞—è "..", ".", –∏ –∏–∑–±—ã—Ç–æ—á–Ω—ã–µ —Å–ª—ç—à–∏.

    üîπ **–ú–µ—Ç–æ–¥**:
        - –†–∞–∑–±–∏–≤–∞–µ–º `path` –ø–æ `/`.
        - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–µ–∫ `stack` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω –ø–∞–ø–æ–∫.
        - `..` ‚Üí —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ `stack` (–µ—Å–ª–∏ –µ—Å—Ç—å).
        - `.` –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ ‚Üí –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è.
        - –ò—Ç–æ–≥–æ–≤—ã–π –ø—É—Ç—å —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏–∑ `stack`.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
        - `O(n)`, –≥–¥–µ `n` ‚Äî –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ `path`.

    ‚úÖ **–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã**:
       ```
       simplify_path("/home/")       ‚Üí "/home"
       simplify_path("/../")         ‚Üí "/"
       simplify_path("/home//foo/")  ‚Üí "/home/foo"
       simplify_path("/a/./b/../../c/") ‚Üí "/c"
       ```
    """
    stack = []

    for part in path.split("/"):  # –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ "/"
        if part == "..":
            if stack:
                stack.pop()  # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
        elif part and part != ".":  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —á–∞—Å—Ç–∏ –∏ "."
            stack.append(part)

    return "/" + "/".join(stack)  # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å, –Ω–∞—á–∏–Ω–∞—è —Å "/"

# üîπ –¢–µ—Å—Ç—ã
print(simplify_path("/home/"))  # ‚úÖ "/home"
print(simplify_path("/../"))  # ‚úÖ "/"
print(simplify_path("/home//foo/"))  # ‚úÖ "/home/foo"
print(simplify_path("/a/./b/../../c/"))  # ‚úÖ "/c"
print(simplify_path("/a/../../b/../c//.//"))  # ‚úÖ "/c"
print(simplify_path("/a//b////c/d//././/.."))  # ‚úÖ "/a/b/c"
