def max_subarray_sum_divisible_by_k(nums: list[int], k: int) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç **–º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–¥–º–∞—Å—Å–∏–≤–∞**, –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∏—Ç—Å—è –Ω–∞ `k`.

    üîπ –ê–ª–≥–æ—Ä–∏—Ç–º (–ü—Ä–µ—Ñ–∏–∫—Å–Ω—ã–µ —Å—É–º–º—ã O(n¬≤)):
    1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º `prefix_sum`, –≥–¥–µ `prefix_sum[i]` ‚Äî —Å—É–º–º–∞ –ø–µ—Ä–≤—ã—Ö `i` —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
    2Ô∏è‚É£ –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ `(i, j)` –≤—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º—É `prefix_sum[j] - prefix_sum[i]`.
    3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–µ–ª–∏—Ç—Å—è –ª–∏ `sub_sum` –Ω–∞ `k`, –µ—Å–ª–∏ –¥–∞ ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º `max_sum`.

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n¬≤)** ‚Äî –¥–≤–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–∞.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n)** ‚Äî –º–∞—Å—Å–∏–≤ `prefix_sum`.

    :param nums: list[int] - –≤—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å–∏–≤.
    :param k: int - –¥–µ–ª–∏—Ç–µ–ª—å.
    :return: int - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞, –¥–µ–ª—è—â–∞—è—Å—è –Ω–∞ `k`.
    """

    n = len(nums)
    prefix_sum = [0] * (n + 1)

    # 1. –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã—Ö —Å—É–º–º
    for i in range(n):
        prefix_sum[i + 1] = prefix_sum[i] + nums[i]

    max_sum = 0

    # 2. –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–æ–¥–º–∞—Å—Å–∏–≤—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ª–∏–º–æ—Å—Ç—å —Å—É–º–º—ã –Ω–∞ `k`
    for i in range(n):
        for j in range(i + 1, n + 1):
            sub_sum = prefix_sum[j] - prefix_sum[i]
            if sub_sum % k == 0:
                max_sum = max(max_sum, sub_sum)

    return max_sum


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
nums1, k1 = [3, 1, 4, 2, 6], 3
nums2, k2 = [4, 7, 9, 3, 2], 5

print(max_subarray_sum_divisible_by_k(nums1, k1))  # ‚úÖ 12
print(max_subarray_sum_divisible_by_k(nums2, k2))  # ‚úÖ 20
