def word_break(s: str, word_dict: list[str]) -> bool:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É `s` –Ω–∞ —Å–ª–æ–≤–∞ –∏–∑ `word_dict`.

    üîπ –ê–ª–≥–æ—Ä–∏—Ç–º (–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ O(n¬≤)):
    1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±—É–ª–µ–≤ –º–∞—Å—Å–∏–≤ `dp`, –≥–¥–µ `dp[i]` ‚Äî –º–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–±–∏—Ç—å `s[:i]`.
    2Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º `dp[0] = True` (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Å–µ–≥–¥–∞ –¥–æ–ø—É—Å—Ç–∏–º–∞).
    3Ô∏è‚É£ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º `i` –æ—Ç 1 –¥–æ `len(s)`:
        - –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ `j` –æ—Ç 0 –¥–æ `i`:
          - –ï—Å–ª–∏ `dp[j] == True` –∏ `s[j:i]` –µ—Å—Ç—å –≤ `word_set`, —Ç–æ `dp[i] = True`.
    4Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç: `dp[len(s)]`.

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n¬≤)** ‚Äî –¥–≤–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–∞.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n)** ‚Äî –º–∞—Å—Å–∏–≤ `dp`.

    :param s: str - –≤—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
    :param word_dict: list[str] - —Å–ª–æ–≤–∞—Ä—å –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Å–ª–æ–≤.
    :return: bool - –º–æ–∂–Ω–æ –ª–∏ —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–∞ –∏–∑ `word_dict`.
    """

    word_set = set(word_dict)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
    dp = [False] * (len(s) + 1)
    dp[0] = True  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Å–µ–≥–¥–∞ –≤–∞–ª–∏–¥–Ω–∞

    for i in range(1, len(s) + 1):
        for j in range(i):
            if dp[j] and s[j:i] in word_set:
                dp[i] = True
                break  # –ù–∞—à–ª–∏ —Ä–∞–∑–±–∏–µ–Ω–∏–µ, –∏–¥—ë–º –¥–∞–ª—å—à–µ

    return dp[len(s)]


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
print(word_break("leetcode", ["leet", "code"]))  # ‚úÖ True
print(word_break("applepenapple", ["apple", "pen"]))  # ‚úÖ True
print(word_break("catsandog", ["cats", "dog", "sand", "and", "cat"]))  # ‚ùå False
print(word_break("aaaaaaa", ["aaaa", "aaa"]))  # ‚úÖ True
print(word_break("abcd", ["a", "abc", "b", "cd"]))  # ‚úÖ True
