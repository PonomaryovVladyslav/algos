def min_coin_amount(coins: list[int], value: int) -> tuple[int, list[int]]:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è —Å—É–º–º—ã `value` –∏ –∫–∞–∫–∏–µ –º–æ–Ω–µ—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å.

    üîπ –ê–ª–≥–æ—Ä–∏—Ç–º:
    1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ.
    2Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –º–∞—Å—Å–∏–≤ `dp`, –≥–¥–µ `dp[i]` ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –¥–ª—è —Å—É–º–º—ã `i`.
    3Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º `dp[0] = 0` (0 –º–æ–Ω–µ—Ç –¥–ª—è —Å—É–º–º—ã 0), –æ—Å—Ç–∞–ª—å–Ω—ã–µ `dp[i] = ‚àû`.
    4Ô∏è‚É£ –î–ª—è –∫–∞–∂–¥–æ–π —Å—É–º–º—ã `i` –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–Ω–µ—Ç—ã:
        - –ï—Å–ª–∏ `i >= coin`, –æ–±–Ω–æ–≤–ª—è–µ–º `dp[i] = min(dp[i], dp[i - coin] + 1)`.
    5Ô∏è‚É£ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç:
        - –ù–∞—á–∏–Ω–∞–µ–º —Å `i = value`, –¥–≤–∏–≥–∞–µ–º—Å—è –Ω–∞–∑–∞–¥, –ø—Ä–æ–≤–µ—Ä—è—è, –∫–∞–∫–∏–µ –º–æ–Ω–µ—Ç—ã –ø—Ä–∏–≤–µ–ª–∏ –∫ `dp[i]`.

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n * m)**, –≥–¥–µ `n = value`, `m = len(coins)`.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n)`, —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞—Å—Å–∏–≤ `dp` —Ä–∞–∑–º–µ—Ä–∞ `value + 1`.

    :param coins: list[int] - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–∏–Ω–∞–ª–æ–≤ –º–æ–Ω–µ—Ç.
    :param value: int - —Ü–µ–ª–µ–≤–∞—è —Å—É–º–º–∞.
    :return: tuple[int, list[int]] - –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –∏ —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç.
    """

    # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º dp-–º–∞—Å—Å–∏–≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—è–º–∏
    dp = [float('inf')] * (value + 1)
    dp[0] = 0  # –î–ª—è —Å—É–º–º—ã 0 –º–æ–Ω–µ—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è

    # 2. –ó–∞–ø–æ–ª–Ω—è–µ–º dp –º–∞—Å—Å–∏–≤
    for i in range(1, value + 1):
        for coin in coins:
            if i >= coin:
                dp[i] = min(dp[i], dp[i - coin] + 1)

    # 3. –ï—Å–ª–∏ —Å—É–º–º—É –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º -1
    if dp[value] == float('inf'):
        return -1, []

    # 4. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–Ω–µ—Ç
    used_coins = []
    i = value
    while i > 0:
        for coin in coins:
            if i >= coin and dp[i] == dp[i - coin] + 1:
                used_coins.append(coin)
                i -= coin
                break  # –ù–∞–π–¥–µ–Ω–Ω—É—é –º–æ–Ω–µ—Ç—É —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ–º

    return dp[value], used_coins


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
coins = [1, 2, 5, 10]
value = 123

print(min_coin_amount(coins, value))  # (13, [10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2, 1])
