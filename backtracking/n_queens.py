# –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—à–µ–Ω–∏–π –∑–∞–¥–∞—á–∏ N-—Ñ–µ—Ä–∑–µ–π.
# –î–∞–Ω–æ: —á–∏—Å–ª–æ `n`, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–µ–µ —Ä–∞–∑–º–µ—Ä —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–∏ `n x n`.
# –ù—É–∂–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–æ–∫ `n` —Ñ–µ—Ä–∑–µ–π —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –±–∏–ª–∏ –¥—Ä—É–≥ –¥—Ä—É–≥–∞.

def total_n_queens(n: int) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–æ–∫ `n` —Ñ–µ—Ä–∑–µ–π –Ω–∞ `n x n` –¥–æ—Å–∫–µ.

    :param n: int - —Ä–∞–∑–º–µ—Ä —à–∞—Ö–º–∞—Ç–Ω–æ–π –¥–æ—Å–∫–∏ (–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–µ—Ä–∑–µ–π).
    :return: int - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–æ–∫.
    """

    def backtrack(row: int, cols: set[int], diag1: set[int], diag2: set[int]) -> int:
        """
        –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–æ–∫ —Ñ–µ—Ä–∑–µ–π.

        :param row: int - —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞, –≥–¥–µ —Ä–∞–∑–º–µ—â–∞–µ–º —Ñ–µ—Ä–∑—è.
        :param cols: set[int] - –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç—ã—Ö –∫–æ–ª–æ–Ω–æ–∫.
        :param diag1: set[int] - –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç—ã—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π (row + col).
        :param diag2: set[int] - –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–∞–Ω—è—Ç—ã—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π (row - col).
        :return: int - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–æ–∫ —Å —Ç–µ–∫—É—â–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏.
        """

        if row == n:  # –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å `n` —Ñ–µ—Ä–∑–µ–π, –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ
            return 1

        count: int = 0
        for col in range(n):  # –ü—Ä–æ–±—É–µ–º –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–µ—Ä–∑—è –≤ –∫–∞–∂–¥—É—é –∫–æ–ª–æ–Ω–∫—É —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
            if col in cols or (row + col) in diag1 or (row - col) in diag2:
                continue  # –ï—Å–ª–∏ —Ñ–µ—Ä–∑–∏ –±—å—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

            # –†–∞–∑–º–µ—â–∞–µ–º —Ñ–µ—Ä–∑—è
            cols.add(col)
            diag1.add(row + col)
            diag2.add(row - col)

            count += backtrack(row + 1, cols, diag1, diag2)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏

            # –£–±–∏—Ä–∞–µ–º —Ñ–µ—Ä–∑—è (backtracking)
            cols.remove(col)
            diag1.remove(row + col)
            diag2.remove(row - col)

        return count

    return backtrack(0, set(), set(), set())


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
print(total_n_queens(4))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 2
print(total_n_queens(8))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 92

"""
–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
- –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n!), —Ç–∞–∫ –∫–∞–∫ –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ –º—ã –ø—Ä–æ–±—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞—Å—Å—Ç–∞–Ω–æ–≤–∫–∏.
- –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –º—ã —Ö—Ä–∞–Ω–∏–º —Ç—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ (`cols`, `diag1`, `diag2`) –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
"""
