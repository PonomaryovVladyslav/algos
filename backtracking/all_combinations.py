# –ó–∞–¥–∞—á–∞: –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ `k` —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ `n`.
# –î–∞–Ω–æ: –¥–≤–∞ —á–∏—Å–ª–∞ `n` –∏ `k`.
# –ù—É–∂–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–ª–∏–Ω—ã `k`.

def combine(n: int, k: int) -> list[list[int]]:
    """
    –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è `k` —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ `n`.

    :param n: int - —á–∏—Å–ª–æ, –æ—Ç 1 –¥–æ `n`, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã.
    :param k: int - –¥–ª–∏–Ω–∞ –∫–∞–∂–¥–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏.
    :return: list[list[int]] - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π –¥–ª–∏–Ω—ã `k`.
    """

    result: list[list[int]] = []  # –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π

    def backtrack(start: int, path: list[int]) -> None:
        """
        –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–π.

        :param start: int - —á–∏—Å–ª–æ, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–µ—Ä–µ–±–æ—Ä.
        :param path: list[int] - —Ç–µ–∫—É—â–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è.
        """

        if len(path) == k:  # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ k —á–∏—Å–µ–ª, –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            result.append(path[:])  # –ö–æ–ø–∏—Ä—É–µ–º `path`, —á—Ç–æ–±—ã –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å –µ–≥–æ
            return

        for i in range(start, n + 1):  # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —á–∏—Å–ª–∞ –æ—Ç `start` –¥–æ `n`
            path.append(i)  # –î–æ–±–∞–≤–ª—è–µ–º —á–∏—Å–ª–æ –≤ –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
            backtrack(i + 1, path)  # –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ
            path.pop()  # –û—Ç–∫–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ (backtracking)

    backtrack(1, [])
    return result


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
print(combine(4, 2))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]]
print(combine(3, 3))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [[1,2,3]]
print(combine(5, 3))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [[1,2,3], [1,2,4], [1,2,5], [1,3,4], ...]

"""
–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
- –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(C(n, k)) = O(n! / (k! * (n - k)!)), —Ç–∞–∫ –∫–∞–∫ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è.
- –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(k), —Ç–∞–∫ –∫–∞–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏–∏ ‚Äî `k`.
"""
