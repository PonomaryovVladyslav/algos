class Node:
    def __init__(self, val=0, next=None, random=None):
        self.val = val
        self.next = next
        self.random = random

def copy_random_list(head: Node) -> Node:
    """
    –ö–ª–æ–Ω–∏—Ä—É–µ—Ç —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–º–∏ —É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º (O(1) –ø–∞–º—è—Ç–∏, O(n) –≤—Ä–µ–º–µ–Ω–∏)**:
       1. **–í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–ø–∏–∏ —É–∑–ª–æ–≤**: `A ‚Üí A' ‚Üí B ‚Üí B' ‚Üí C ‚Üí C'`
       2. **–û–±–Ω–æ–≤–ª—è–µ–º `random` —É–∫–∞–∑–∞—Ç–µ–ª–∏**: `A'.random = A.random.next`
       3. **–†–∞–∑—ä–µ–¥–∏–Ω—è–µ–º —Å–ø–∏—Å–∫–∏**: `A ‚Üí B ‚Üí C` –∏ `A' ‚Üí B' ‚Üí C'`

    üîπ **–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n)`, —Ç–∞–∫ –∫–∞–∫ –º—ã —Ç—Ä–∏–∂–¥—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å–ø–∏—Å–∫—É.

    üîπ **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(1)`, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ö–µ—à-—Ç–∞–±–ª–∏—Ü—É.

    :param head: Node - –ì–æ–ª–æ–≤–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
    :return: Node - –ì–æ–ª–æ–≤–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
    """
    if not head:
        return None

    # 1. –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–ø–∏–∏ —É–∑–ª–æ–≤ –ø–æ—Å–ª–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–æ–≤
    current = head
    while current:
        new_node = Node(current.val, current.next, None)
        current.next = new_node
        current = new_node.next

    # 2. –û–±–Ω–æ–≤–ª—è–µ–º `random` —É–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–ª—è –Ω–æ–≤—ã—Ö —É–∑–ª–æ–≤
    current = head
    while current:
        if current.random:
            current.next.random = current.random.next
        current = current.next.next

    # 3. –†–∞–∑—ä–µ–¥–∏–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–∫–∏
    current = head
    new_head = head.next
    copy = new_head
    while current:
        current.next = copy.next
        current = current.next
        if copy.next:
            copy.next = copy.next.next
            copy = copy.next

    return new_head
