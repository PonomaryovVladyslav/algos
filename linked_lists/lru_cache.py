from collections import OrderedDict

class LRUCache:
    """
    –†–µ–∞–ª–∏–∑—É–µ—Ç –∫—ç—à —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π LRU (Least Recently Used) —Å –ø–æ–º–æ—â—å—é OrderedDict.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º**:
       - –ò—Å–ø–æ–ª—å–∑—É–µ–º `OrderedDict` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä (–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ) –≤ –ø–æ—Ä—è–¥–∫–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
       - `get(key)`: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ—Ä—è–¥–æ–∫ (–ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –≤ –∫–æ–Ω–µ—Ü).
       - `put(key, value)`: –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –∏ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ `capacity` —É–¥–∞–ª—è–µ—Ç –Ω–∞–∏–º–µ–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `get()`: `O(1)`
       - `put()`: `O(1)`, —Ç–∞–∫ –∫–∞–∫ `OrderedDict` –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç `move_to_end()` –∏ `popitem()` –∑–∞ `O(1)`.
    """

    def __init__(self, capacity: int):
        self.cache = OrderedDict()
        self.capacity = capacity

    def get(self, key: int) -> int:
        if key not in self.cache:
            return -1  # –ï—Å–ª–∏ –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        self.cache.move_to_end(key)  # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (–ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ–Ω–µ—Ü)
        return self.cache[key]

    def put(self, key: int, value: int) -> None:
        if key in self.cache:
            self.cache.move_to_end(key)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –∫–æ–Ω–µ—Ü (—Å–∞–º—ã–π –Ω–æ–≤—ã–π)
        self.cache[key] = value
        if len(self.cache) > self.capacity:
            self.cache.popitem(last=False)  # –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç (LRU)


# üîπ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
lru = LRUCache(2)
lru.put(1, 1)
lru.put(2, 2)
print(lru.get(1))  # ‚úÖ 1 (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ–Ω–µ—Ü)
lru.put(3, 3)  # ‚ùå –£–¥–∞–ª—è–µ—Ç 2 (–Ω–∞–∏–º–µ–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π)
print(lru.get(2))  # ‚úÖ -1 (—É–¥–∞–ª—ë–Ω)
lru.put(4, 4)  # ‚ùå –£–¥–∞–ª—è–µ—Ç 1 (LRU)
print(lru.get(1))  # ‚úÖ -1 (—É–¥–∞–ª—ë–Ω)
print(lru.get(3))  # ‚úÖ 3
print(lru.get(4))  # ‚úÖ 4
