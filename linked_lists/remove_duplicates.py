class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def delete_duplicates(head: ListNode) -> ListNode:
    """
    –£–¥–∞–ª—è–µ—Ç –≤—Å–µ —É–∑–ª—ã, –∏–º–µ—é—â–∏–µ –¥—É–±–ª–∏–∫–∞—Ç—ã, –∏–∑ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º**:
       - –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π —É–∑–µ–ª `dummy` –ø–µ—Ä–µ–¥ `head` –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã.
       - –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å–ø–∏—Å–∫—É:
         - –ï—Å–ª–∏ –≤—Å—Ç—Ä–µ—á–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (`val == next.val`), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–∞–∫–∏–µ —É–∑–ª—ã.
         - –ï—Å–ª–∏ –Ω–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç–æ–≤, –ø—Ä–æ—Å—Ç–æ –¥–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ.
       - –í –∫–æ–Ω—Ü–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `dummy.next`.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n)`, —Ç–∞–∫ –∫–∞–∫ –º—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å–ø–∏—Å–∫—É –æ–¥–∏–Ω —Ä–∞–∑.
       - `O(1)` –ø–æ –ø–∞–º—è—Ç–∏ (–Ω–µ —É—á–∏—Ç—ã–≤–∞—è –≤—ã—Ö–æ–¥–Ω–æ–π —Å–ø–∏—Å–æ–∫).
    """

    dummy = ListNode(0, head)  # –§–∏–∫—Ç–∏–≤–Ω—ã–π —É–∑–µ–ª –ø–µ—Ä–µ–¥ head
    prev = dummy
    current = head

    while current:
        if current.next and current.val == current.next.val:  # –ï—Å–ª–∏ –µ—Å—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
            while current.next and current.val == current.next.val:
                current = current.next  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤—Å–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —É–∑–ª—ã
            prev.next = current.next  # –£–¥–∞–ª—è–µ–º –≤—Å—é –≥—Ä—É–ø–ø—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        else:
            prev = prev.next  # –î–≤–∏–≥–∞–µ–º prev –≤–ø–µ—Ä—ë–¥
        current = current.next  # –î–≤–∏–≥–∞–µ–º current

    return dummy.next


# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞
def print_list(head):
    values = []
    while head:
        values.append(str(head.val))
        head = head.next
    print(" -> ".join(values) if values else "Empty list")


# üîπ –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
head1 = ListNode(1, ListNode(2, ListNode(3, ListNode(3, ListNode(4, ListNode(4, ListNode(5)))))))
head2 = ListNode(1, ListNode(1, ListNode(1, ListNode(2, ListNode(3)))))
head3 = ListNode(1, ListNode(1))

print("–ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
print_list(head1)
new_head1 = delete_duplicates(head1)
print("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:")
print_list(new_head1)  # 1 -> 2 -> 5

print("\n–ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
print_list(head2)
new_head2 = delete_duplicates(head2)
print("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:")
print_list(new_head2)  # 2 -> 3

print("\n–ò—Å—Ö–æ–¥–Ω—ã–π —Å–ø–∏—Å–æ–∫:")
print_list(head3)
new_head3 = delete_duplicates(head3)
print("–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:")
print_list(new_head3)  # Empty list
