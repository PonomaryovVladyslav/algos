def max_area(height: list[int]) -> int:
    """
    Найти максимальный объем воды, который можно удержать между стенками.

    Дана последовательность `height`, где `height[i]` — высота i-й вертикальной стенки.
    Нужно выбрать две стенки так, чтобы площадь (ширина * минимальная высота) была максимальной.

    Вход:
    height = [1,8,6,2,5,4,8,3,7]

    Выход:
    49  (Выбираем `height[1] = 8` и `height[8] = 7`, расстояние 7, площадь 7 * 7 = 49)

    Решение:
    - Используем два указателя `left` (начало) и `right` (конец).
    - Вычисляем текущую площадь: `water = (right - left) * min(height[left], height[right])`
    - Двигаем указатель, который указывает на меньшую высоту (чтобы потенциально найти большую площадь).

    Время: O(n) — линейный проход от начала к концу.
    Пространство: O(1) — используем только несколько переменных.
    """

    left, right = 0, len(height) - 1  # Два указателя
    max_water = 0

    while left < right:
        # Вычисляем текущую площадь контейнера
        water = (right - left) * min(height[left], height[right])
        max_water = max(max_water, water)

        # Двигаем указатель, указывающий на меньшую высоту
        if height[left] < height[right]:
            left += 1
        else:
            right -= 1

    return max_water


# Тесты
print(max_area([1, 8, 6, 2, 5, 4, 8, 3, 7]))  # 49
print(max_area([1, 1]))  # 1
print(max_area([4, 3, 2, 1, 4]))  # 16
print(max_area([1, 2, 1]))  # 2
print(max_area([1, 3, 2, 5, 25, 24, 5]))  # 24
