# –ó–∞–¥–∞—á–∞: –ü–æ–ª–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞.
# –î–∞–Ω–æ: —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ `words` –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ `max_width`.
# –ù—É–∂–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–ª–æ–≤–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã—Ä–æ–≤–Ω–µ–Ω.

def text_justify(words: list[str], max_width: int) -> list[str]:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞.

    :param words: list[str] - —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤.
    :param max_width: int - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏.
    :return: list[str] - —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ —Å –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º.
    """

    result: list[str] = []  # –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫
    line: list[str] = []  # –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–æ–∫–∞
    line_length: int = 0  # –î–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤

    for word in words:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–ª–µ–∑–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ —Å–ª–æ–≤–æ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫—É
        if line_length + len(word) + len(line) > max_width:
            # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ —Å—Ç—Ä–æ–∫–µ
            for i in range(max_width - line_length):  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–µ–ª–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                line[i % (len(line) - 1 or 1)] += " "  # –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ

            result.append("".join(line))  # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            line, line_length = [], 0  # –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É

        line.append(word)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –≤ —Å—Ç—Ä–æ–∫—É
        line_length += len(word)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É (–ª–µ–≤–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ)
    result.append(" ".join(line).ljust(max_width))

    return result


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
words1 = ["This", "is", "an", "example", "of", "text", "justification."]
max_width1 = 16
print("\n".join(text_justify(words1, max_width1)))

"""
–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
"This    is    an"
"example  of text"
"justification.  "
"""

"""
–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
- –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –º—ã –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º —Å–ª–æ–≤–∞–º –∏ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã.
- –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–∏—Å–æ–∫ `result` –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.
"""
