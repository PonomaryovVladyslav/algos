# –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º, –Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ–º –º–∞—Å—Å–∏–≤–µ.
# –î–∞–Ω–æ: –º–∞—Å—Å–∏–≤ `nums`, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –Ω–æ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º —Å–¥–≤–∏–≥–æ–º.
# –ù—É–∂–Ω–æ: –≤–µ—Ä–Ω—É—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

def find_min(nums: list[int]) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º, –Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ–º –º–∞—Å—Å–∏–≤–µ.

    :param nums: list[int] - –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –ø–æ–≤–µ—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤.
    :return: int - –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.
    """

    left, right = 0, len(nums) - 1  # –ì—Ä–∞–Ω–∏—Ü—ã –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞

    while left < right:
        mid = (left + right) // 2  # –°—Ä–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å

        if nums[mid] > nums[right]:  # –ú–∏–Ω–∏–º—É–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å–ø—Ä–∞–≤–∞
            left = mid + 1
        else:  # –ú–∏–Ω–∏–º—É–º —Å–ª–µ–≤–∞ –∏–ª–∏ mid
            right = mid

    return nums[left]  # `left == right`, —É–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ –º–∏–Ω–∏–º—É–º


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
print(find_min([3, 4, 5, 1, 2]))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 1
print(find_min([4, 5, 6, 7, 0, 1, 2]))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0
print(find_min([11, 13, 15, 17]))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 11
print(find_min([2, 3, 4, 5, 6, 7, 0, 1]))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 0
print(find_min([1]))  # –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 1

"""
–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏:
- –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(log n), —Ç–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫.
- –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: O(1), —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å.
"""
