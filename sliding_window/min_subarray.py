def min_subarray_len(target: int, nums: list[int]) -> int:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –ø–æ–¥–º–∞—Å—Å–∏–≤–∞, —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ ‚â• target.

    üîπ **–ú–µ—Ç–æ–¥**: Sliding Window (–¥–≤–µ –≥—Ä–∞–Ω–∏—Ü—ã `left`, `right`)
    üîπ **–ò–¥–µ—è**:
       - –î–≤–∏–≥–∞–µ–º `right`, –ø–æ–∫–∞ —Å—É–º–º–∞ < target.
       - –ö–æ–≥–¥–∞ —Å—É–º–º–∞ ‚â• target, —É–º–µ–Ω—å—à–∞–µ–º `left`, —Å–æ–∫—Ä–∞—â–∞—è –æ–∫–Ω–æ.
       - –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É –æ–∫–Ω–∞.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n)`, –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥ (–∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∑–∞—Ö–æ–¥–∏—Ç –∏ –≤—ã—Ö–æ–¥–∏—Ç 1 —Ä–∞–∑).
       - `O(1)`, –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–∞—è –ø–∞–º—è—Ç—å.

    ‚úÖ **–ü—Ä–∏–º–µ—Ä**:
       ```
       –í—Ö–æ–¥: target=7, nums=[2,3,1,2,4,3]
       –í—ã—Ö–æ–¥: 2 (–ø–æ–¥–º–∞—Å—Å–∏–≤ [4,3])
       ```
    """
    left = 0
    window_sum = 0
    min_length = float('inf')

    for right in range(len(nums)):
        window_sum += nums[right]  # –†–∞—Å—à–∏—Ä—è–µ–º –æ–∫–Ω–æ –≤–ø—Ä–∞–≤–æ

        while window_sum >= target:  # –ö–æ–≥–¥–∞ —Å—É–º–º–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ target
            min_length = min(min_length, right - left + 1)
            window_sum -= nums[left]  # –£–º–µ–Ω—å—à–∞–µ–º –æ–∫–Ω–æ —Å–ª–µ–≤–∞
            left += 1

    return min_length if min_length != float('inf') else 0


# üîπ –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
print(min_subarray_len(7, [2,3,1,2,4,3]))  # ‚úÖ 2 ([4,3])
print(min_subarray_len(4, [1,4,4]))  # ‚úÖ 1 ([4])
print(min_subarray_len(11, [1,1,1,1,1,1,1,1]))  # ‚úÖ 0 (–Ω–µ—Ç –ø–æ–¥–º–∞—Å—Å–∏–≤–∞)
print(min_subarray_len(15, [5,1,3,5,10,7,4,9,2,8]))  # ‚úÖ 2 ([10,7])
