from collections import Counter

def find_substring(s: str, words: list[str]) -> list[int]:
    """
    –ò—â–µ—Ç –≤—Å–µ –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∞–ª–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫ –≤ `s`, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –≤—Å–µ —Å–ª–æ–≤–∞ –∏–∑ `words` —Ä–æ–≤–Ω–æ 1 —Ä–∞–∑.

    üîπ **–ú–µ—Ç–æ–¥**: Sliding Window + HashMap (Counter)
    üîπ **–ò–¥–µ—è**:
       - –ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –∏–º–µ–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–ª–∏–Ω—É `word_len`.
       - –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ `word_len` –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–¥–≤–∏–≥–æ–≤ `i = 0, 1, ..., word_len-1`.
       - –ò—Å–ø–æ–ª—å–∑—É–µ–º `left` –∏ `right` —É–∫–∞–∑–∞—Ç–µ–ª–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ç–µ–∫—É—â–µ–≥–æ –æ–∫–Ω–∞.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n * word_len)`, –≥–¥–µ `n` ‚Äî –¥–ª–∏–Ω–∞ `s`.

    ‚úÖ **–ü—Ä–∏–º–µ—Ä**:
       ```
       –í—Ö–æ–¥: s = "barfoothefoobarman", words = ["foo", "bar"]
       –í—ã—Ö–æ–¥: [0, 9]
       ```
    """
    if not s or not words:
        return []

    word_len = len(words[0])  # –î–ª–∏–Ω–∞ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    total_len = word_len * len(words)  # –î–ª–∏–Ω–∞ –∏—Å–∫–æ–º–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
    word_count = Counter(words)  # –ß–∞—Å—Ç–æ—Ç–∞ —Å–ª–æ–≤ –≤ words
    result = []

    for i in range(word_len):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–¥–≤–∏–≥–∏ 0, 1, ..., word_len-1
        left, right = i, i
        current_count = Counter()

        while right + word_len <= len(s):
            word = s[right:right + word_len]  # –ë–µ—Ä—ë–º —Å–ª–æ–≤–æ –¥–ª–∏–Ω—ã word_len
            right += word_len

            if word in word_count:
                current_count[word] += 1

                # –ï—Å–ª–∏ —Å–ª–æ–≤–æ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, —Å–¥–≤–∏–≥–∞–µ–º `left`
                while current_count[word] > word_count[word]:
                    current_count[s[left:left + word_len]] -= 1
                    left += word_len

                # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫—É –Ω—É–∂–Ω–æ–π –¥–ª–∏–Ω—ã ‚Äî –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ—ë –∏–Ω–¥–µ–∫—Å
                if right - left == total_len:
                    result.append(left)

            else:  # –ï—Å–ª–∏ —Å–ª–æ–≤–æ –Ω–µ –∏–∑ words, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å—ë
                current_count.clear()
                left = right

    return result

# üîπ –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
print(find_substring("barfoothefoobarman", ["foo", "bar"]))  # ‚úÖ [0, 9]
print(find_substring("wordgoodgoodgoodbestword", ["word","good","best","good"]))  # ‚úÖ [8]
print(find_substring("barfoofoobarthefoobarman", ["bar", "foo", "the"]))  # ‚úÖ [6, 9, 12]
print(find_substring("aaaaaaaaaaaaaa", ["aa", "aa", "aa"]))  # ‚úÖ [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
