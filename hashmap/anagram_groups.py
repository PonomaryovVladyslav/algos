from collections import defaultdict

def group_anagrams(strs: list[str]) -> list[list[str]]:
    """
    –ì—Ä—É–ø–ø–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –∞–Ω–∞–≥—Ä–∞–º–º–∞–º–∏.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º (O(n * k log k))**:
    1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º `defaultdict(list)`, –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º ‚Äî —Å–ø–∏—Å–æ–∫ –∞–Ω–∞–≥—Ä–∞–º–º.
    2Ô∏è‚É£ –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞ `strs`:
       - –°–æ—Ä—Ç–∏—Ä—É–µ–º –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ (`sorted_word = "".join(sorted(word))`).
       - –î–æ–±–∞–≤–ª—è–µ–º `word` –≤ `anagram_map[sorted_word]`.
    3Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–µ–º `list(anagram_map.values())`, —Ç.–µ. –≥—Ä—É–ø–ø—ã –∞–Ω–∞–≥—Ä–∞–º–º.

    üîπ **–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n * k log k)`, –≥–¥–µ `n` ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤, `k` ‚Äî —Å—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞ —Å–ª–æ–≤–∞.

    üîπ **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n * k)`, —Ç–∞–∫ –∫–∞–∫ —Ö—Ä–∞–Ω–∏–º –≤—Å–µ —Å–ª–æ–≤–∞ –∏ –∏—Ö –∫–ª—é—á–∏.

    :param strs: list[str] - –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤.
    :return: list[list[str]] - –°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –∞–Ω–∞–≥—Ä–∞–º–º.
    """
    anagram_map = defaultdict(list)

    for word in strs:
        sorted_word = "".join(sorted(word))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ª–æ–≤–æ –≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á
        anagram_map[sorted_word].append(word)  # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∞–Ω–∞–≥—Ä–∞–º–º—ã

    return list(anagram_map.values())  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∞–≥—Ä–∞–º–º—ã

# üîπ –¢–µ—Å—Ç—ã
print(group_anagrams(["eat", "tea", "tan", "ate", "nat", "bat"]))
# ‚úÖ [["eat", "tea", "ate"], ["tan", "nat"], ["bat"]]

print(group_anagrams([""]))
# ‚úÖ [[""]]

print(group_anagrams(["a"]))
# ‚úÖ [["a"]]
