def pattern_word(pattern: str, s: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ `s` —à–∞–±–ª–æ–Ω—É `pattern`.

    üîπ **–ê–ª–≥–æ—Ä–∏—Ç–º (O(n))**:
       1Ô∏è‚É£ –†–∞–∑–±–∏–≤–∞–µ–º `s` –Ω–∞ —Å–ª–æ–≤–∞ `words`.
       2Ô∏è‚É£ –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ `words` –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –¥–ª–∏–Ω–æ–π `pattern`, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `False`.
       3Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤–∞ —Å–ª–æ–≤–∞—Ä—è (`letter_to_word` –∏ `word_to_letter`) –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
          —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π **–±—É–∫–≤** –∏ **—Å–ª–æ–≤**.
       4Ô∏è‚É£ –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ `pattern` –∏ `words` –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ:
          - –ï—Å–ª–∏ –±—É–∫–≤–∞ –∏ —Å–ª–æ–≤–æ —É–∂–µ —Å–≤—è–∑–∞–Ω—ã –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º.
          - –ï—Å–ª–∏ –±—É–∫–≤–∞ –∏–ª–∏ —Å–ª–æ–≤–æ —É–∂–µ —Å–≤—è–∑–∞–Ω—ã —Å –¥—Ä—É–≥–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `False`.
          - –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–∏.
       5Ô∏è‚É£ –ï—Å–ª–∏ –ø—Ä–æ—à–ª–∏ –≤–µ—Å—å `pattern` –±–µ–∑ –æ—à–∏–±–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º `True`.

    üîπ **–í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n)`, –≥–¥–µ `n` ‚Äî –¥–ª–∏–Ω–∞ `pattern` (–∏–ª–∏ `words`).

    üîπ **–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(n)`, —Ç–∞–∫ –∫–∞–∫ —Ö—Ä–∞–Ω–∏–º `n` –ø–∞—Ä –≤ `letter_to_word` –∏ `word_to_letter`.

    :param pattern: str - –®–∞–±–ª–æ–Ω –∏–∑ –±—É–∫–≤.
    :param s: str - –í—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ (—Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏).
    :return: bool - `True`, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É, –∏–Ω–∞—á–µ `False`.
    """
    words = s.split()
    if len(words) != len(pattern):
        return False

    letter_to_word = {}
    word_to_letter = {}

    for word, letter in zip(words, pattern):
        if (word in word_to_letter and letter != word_to_letter[word]) or \
           (letter in letter_to_word and word != letter_to_word[letter]):
            return False

        letter_to_word[letter] = word
        word_to_letter[word] = letter

    return True


# üîπ –¢–µ—Å—Ç—ã
print(pattern_word("abba", "dog cat cat dog"))  # ‚úÖ True
print(pattern_word("abba", "dog cat cat fish"))  # ‚úÖ False
print(pattern_word("aaaa", "dog dog dog dog"))  # ‚úÖ True
print(pattern_word("abba", "dog dog dog dog"))  # ‚úÖ False
print(pattern_word("aaa", "aa aa aa aa"))  # ‚úÖ False
