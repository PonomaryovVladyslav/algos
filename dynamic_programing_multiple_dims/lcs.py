def longest_common_substring(s1: str, s2: str) -> tuple[int, str]:
    """
    –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç **–Ω–∞–∏–±–æ–ª—å—à—É—é –æ–±—â—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É** –º–µ–∂–¥—É `s1` –∏ `s2`.

    üîπ –ê–ª–≥–æ—Ä–∏—Ç–º (–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ O(m * n)):
    1Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º `dp[i][j]`, –≥–¥–µ `dp[i][j]` ‚Äî –¥–ª–∏–Ω–∞ LCS, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–µ–π—Å—è –≤ `s1[i-1]` –∏ `s2[j-1]`.
    2Ô∏è‚É£ –ï—Å–ª–∏ `s1[i-1] == s2[j-1]`, —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ `dp[i][j] = dp[i-1][j-1] + 1`.
    3Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º `max_length` –∏ `end_index`, –µ—Å–ª–∏ `dp[i][j]` —Å—Ç–∞–ª –±–æ–ª—å—à–µ `max_length`.
    4Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ–º **–¥–≤–µ —Å—Ç—Ä–æ–∫–∏ `prev` –∏ `curr`** –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏ (`O(n)`).
    5Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∞: `s1[end_index - max_length:end_index]`.

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(m * n)** ‚Äî –¥–≤–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–∞.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n)** ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º `prev` –∏ `curr`.

    :param s1: str - –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞.
    :param s2: str - –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞.
    :return: tuple[int, str] - –¥–ª–∏–Ω–∞ –Ω–∞–∏–±–æ–ª—å—à–µ–π –æ–±—â–µ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –∏ —Å–∞–º–∞ –ø–æ–¥—Å—Ç—Ä–æ–∫–∞.
    """

    m, n = len(s1), len(s2)
    prev = [0] * (n + 1)
    curr = [0] * (n + 1)

    max_length = 0
    end_index = 0

    # –ó–∞–ø–æ–ª–Ω—è–µ–º DP —Ç–∞–±–ª–∏—Ü—É
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            if s1[i - 1] == s2[j - 1]:  # –°–∏–º–≤–æ–ª—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç
                curr[j] = prev[j - 1] + 1
                if curr[j] > max_length:
                    max_length = curr[j]
                    end_index = i
            else:
                curr[j] = 0  # –†–∞–∑—Ä—ã–≤ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏

        prev, curr = curr, prev  # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ (rolling DP)

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫—É
    longest_substring = s1[end_index - max_length:end_index]

    return max_length, longest_substring


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
s1 = "abcdef"
s2 = "zbcdf"
length, substring = longest_common_substring(s1, s2)
print(f"–î–ª–∏–Ω–∞: {length}, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: '{substring}'")  # ‚úÖ –î–ª–∏–Ω–∞: 3, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: 'bcd'

s1 = "abcde"
s2 = "ace"
length, substring = longest_common_substring(s1, s2)
print(f"–î–ª–∏–Ω–∞: {length}, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: '{substring}'")  # ‚úÖ –î–ª–∏–Ω–∞: 1, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: 'a'

s1 = "abcdxyz"
s2 = "xyzabcd"
length, substring = longest_common_substring(s1, s2)
print(f"–î–ª–∏–Ω–∞: {length}, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: '{substring}'")  # ‚úÖ –î–ª–∏–Ω–∞: 4, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: 'abcd'

s1 = "abcdef"
s2 = "ghijkl"
length, substring = longest_common_substring(s1, s2)
print(f"–î–ª–∏–Ω–∞: {length}, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: '{substring}'")  # ‚úÖ –î–ª–∏–Ω–∞: 0, –ü–æ–¥—Å—Ç—Ä–æ–∫–∞: ''
