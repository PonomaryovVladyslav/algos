def minimum_total(triangle: list[list[int]]) -> int:
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç **–º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø—É—Ç–∏** –∏–∑ **–≤–µ—Ä—à–∏–Ω—ã** –≤ **–æ—Å–Ω–æ–≤–∞–Ω–∏–µ** —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.

    üîπ –ê–ª–≥–æ—Ä–∏—Ç–º (–î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ O(n¬≤)):
    1Ô∏è‚É£ –ù–∞—á–∏–Ω–∞–µ–º —Å **–ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏** (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è `dp`).
    2Ô∏è‚É£ –î–≤–∏–≥–∞–µ–º—Å—è **—Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö**, –≤—ã–±–∏—Ä–∞—è **–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—É—Ç—å** –Ω–∞ –∫–∞–∂–¥–æ–º —É—Ä–æ–≤–Ω–µ:
       - `dp[j] = triangle[i][j] + min(dp[j], dp[j + 1])`
    3Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç: `dp[0]` (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—É—Ç–∏ –¥–æ –≤–µ—Ä—à–∏–Ω—ã).

    üîπ –í—Ä–µ–º–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n¬≤)** ‚Äî –¥–≤–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–∞.
    üîπ –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: **O(n)** ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º `dp` —Ä–∞–∑–º–µ—Ä–æ–º `n` (–æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞).

    :param triangle: list[list[int]] - —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —Å –≤–µ—Å–∞–º–∏.
    :return: int - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—É—Ç–∏.
    """

    if not triangle:
        return 0

    dp = triangle[-1][:]  # –ù–∞—á–∏–Ω–∞–µ–º —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏

    for i in range(len(triangle) - 2, -1, -1):  # –ü—Ä–æ—Ö–æ–¥–∏–º —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö
        for j in range(len(triangle[i])):
            dp[j] = triangle[i][j] + min(dp[j], dp[j + 1])  # –û–±–Ω–æ–≤–ª—è–µ–º dp

    return dp[0]  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—É—Ç–∏ –¥–æ –≤–µ—Ä—à–∏–Ω—ã


# üîπ –¢–µ—Å—Ç–∏—Ä—É–µ–º
print(minimum_total([
     [2],
    [3, 4],
   [6, 5, 7],
  [4, 1, 8, 3]
]))  # ‚úÖ 11

print(minimum_total([
    [-10]
]))  # ‚úÖ -10
