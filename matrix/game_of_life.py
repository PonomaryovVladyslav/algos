def game_of_life(board: list[list[int]]) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–ª–µ "–ò–≥—Ä–∞ –ñ–∏–∑–Ω—å" —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º:
    1. –ñ–∏–≤–∞—è –∫–ª–µ—Ç–∫–∞ (1) —Å <2 –∏–ª–∏ >3 –∂–∏–≤—ã–º–∏ —Å–æ—Å–µ–¥—è–º–∏ —É–º–∏—Ä–∞–µ—Ç.
    2. –ñ–∏–≤–∞—è –∫–ª–µ—Ç–∫–∞ (1) —Å 2 –∏–ª–∏ 3 —Å–æ—Å–µ–¥—è–º–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –∂–∏—Ç—å.
    3. –ú—ë—Ä—Ç–≤–∞—è –∫–ª–µ—Ç–∫–∞ (0) —Å —Ä–æ–≤–Ω–æ 3 —Å–æ—Å–µ–¥—è–º–∏ –æ–∂–∏–≤–∞–µ—Ç.

    üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è in-place –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:
       - `-1` ‚Üí –∂–∏–≤–∞—è –∫–ª–µ—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —É–º–∏—Ä–∞–µ—Ç.
       - `2` ‚Üí –º—ë—Ä—Ç–≤–∞—è –∫–ª–µ—Ç–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ–∂–∏–≤–∞–µ—Ç.

    üîπ **–°–ª–æ–∂–Ω–æ—Å—Ç—å**:
       - `O(m * n)`, –≥–¥–µ `m √ó n` ‚Äî —Ä–∞–∑–º–µ—Ä –¥–æ—Å–∫–∏.
       - `O(1)` –¥–æ–ø. –ø–∞–º—è—Ç–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –º–µ—Å—Ç–µ).
    """
    if not board or not board[0]:
        return

    m, n = len(board), len(board[0])

    def count_live_neighbors(r, c):
        """ –ü–æ–¥—Å—á—ë—Ç –∂–∏–≤—ã—Ö —Å–æ—Å–µ–¥–µ–π (—É—á–∏—Ç—ã–≤–∞–µ—Ç -1 –∫–∞–∫ –∂–∏–≤—É—é). """
        directions = [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]
        return sum(
            1 for dr, dc in directions if 0 <= r + dr < m and 0 <= c + dc < n and abs(board[r + dr][c + dc]) == 1)

    # 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è —è—á–µ–µ–∫
    for i in range(m):
        for j in range(n):
            live_neighbors = count_live_neighbors(i, j)

            if board[i][j] == 1 and (live_neighbors < 2 or live_neighbors > 3):
                board[i][j] = -1  # –ñ–∏–≤–∞—è –∫–ª–µ—Ç–∫–∞ —É–º–∏—Ä–∞–µ—Ç

            if board[i][j] == 0 and live_neighbors == 3:
                board[i][j] = 2  # –ú—ë—Ä—Ç–≤–∞—è –∫–ª–µ—Ç–∫–∞ –æ–∂–∏–≤–∞–µ—Ç

    # 2. –ó–∞–º–µ–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    for i in range(m):
        for j in range(n):
            if board[i][j] == -1:
                board[i][j] = 0
            elif board[i][j] == 2:
                board[i][j] = 1


# üîπ –¢–µ—Å—Ç
board1 = [
    [0, 1, 0],
    [0, 0, 1],
    [1, 1, 1],
    [0, 0, 0]
]

game_of_life(board1)

# üîπ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
# [[0, 0, 0],
#  [1, 0, 1],
#  [0, 1, 1],
#  [0, 1, 0]]

for row in board1:
    print(row)
